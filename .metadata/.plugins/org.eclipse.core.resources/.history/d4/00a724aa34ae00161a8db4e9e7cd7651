package quest;

//Import Java libraries
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.*;

import javax.swing.*;

//Import app components
import userInterface.*;

public class Quest {
	
	public CreateCharacter character;
	
	public JFrame frame;
	private JMenuBar menuBar;
	private JPanel mainPanel;
	public JPanel mainMenuButtonPanel;
	public JPanel gameButtonPanel;
	
	private JMenu fileMenu;
	private JMenuItem exit;
	private JMenuItem loadGame;
	private JMenuItem saveGame;
	
	private JMenu settingsMenu;
	private JMenuItem settings;
	
	private JMenu helpMenu;
	private JMenuItem help;
	private JMenuItem about;
	
	private JButton startButton;
	private JButton createCharacterButton;
	
	public Quest(){
		initComponents();
	}
	
	
	private void initComponents(){
		
		//set layout
		BorderLayout layout = new BorderLayout();
		CardLayout panelLayout = new CardLayout();
		
		//Initialize JFrame
		frame = new JFrame("FruitQuest");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(800, 600);
		
		//Create and add menu bar
		menuBar = new JMenuBar();
		frame.add(menuBar,layout.NORTH);
		
		//Create, populate, and add main panel (center)
		mainPanel = new JPanel(panelLayout);
		JPanel frontPage = new JPanel();
		frontPage.add(new JLabel(new ImageIcon("./assets/title.png")));
		frame.add(mainPanel, layout.CENTER);
		mainPanel.setBackground(Color.WHITE);
		
		//Create main buttons
		createCharacterButton = new JButton("Create Character");
		startButton = new JButton("Begin Quest!");
		startButton.setMaximumSize(new Dimension(200,50));
		
		//Create lower panel for buttons
		JPanel lowerPanel = new JPanel();
		
		//Add buttons to lower panel
		lowerPanel.add(createCharacterButton, lowerPanel);
		createCharacterButton.addActionListener(new CreateCharacterAction());
		lowerPanel.add(startButton, lowerPanel);
		startButton.addActionListener(new BeginQuestAction());
		
		//Add button panel to bottom of frame
		frame.add(lowerPanel,layout.SOUTH);
		
		//Build file menu
		fileMenu = new JMenu("File");
		fileMenu.setMnemonic('F');
		
			loadGame = new JMenuItem("Load Game");
			loadGame.addActionListener(new FileMenuAction());
			fileMenu.add(loadGame);
			
			saveGame = new JMenuItem("Save Game");
			saveGame.addActionListener(new FileMenuAction());
			fileMenu.add(saveGame);
		
			exit = new JMenuItem("Exit");
			exit.addActionListener(new FileMenuAction());
			fileMenu.add(exit);
			
		//Build settings menu
		settingsMenu = new JMenu("Settings");
		settingsMenu.setMnemonic('S');
		
			settings = new JMenuItem("Settings");
			settings.addActionListener(new SettingsMenuAction());
			settingsMenu.add(settings);
		
		//Build help menu
		helpMenu = new JMenu("Help");
		helpMenu.setMnemonic('H');
		
			JMenuItem help = new JMenuItem("Help");
			help.addActionListener(new HelpMenuAction());
			helpMenu.add(help);
			
			JMenuItem about = new JMenuItem("About");
			about.addActionListener(new HelpMenuAction());
			helpMenu.add(about);
		
		//Add all menus to menu bar
		menuBar.add(fileMenu);
		menuBar.add(settingsMenu);
		menuBar.add(helpMenu);
		
		//Display UI
		frame.setVisible(true);
		frame.validate();
		frame.repaint();
		
	}
	
	private class FileMenuAction implements ActionListener{
		public void actionPerformed(ActionEvent e)
		{
			//panel.removeAll();
			
			if(e.getActionCommand() == "Exit")
			{
				System.exit(0);
			}
			else if (e.getActionCommand() == "Load Game"){
				
			}
			else if(e.getActionCommand() == "Save Game"){
				
			}
			/*else if(e.getActionCommand() == ""){
				
			}*/
		}
	}
	
	private class SettingsMenuAction implements ActionListener{
		public void actionPerformed(ActionEvent e){
			if(e.getActionCommand() == "Settings"){
				
			}
		}
	}
	
	private class HelpMenuAction implements ActionListener{
		public void actionPerformed(ActionEvent e){
			if(e.getActionCommand() == "Help"){
				HelpInfo help = new HelpInfo(frame);
			}
			else if(e.getActionCommand() == "About"){
				AboutInfo about = new AboutInfo(frame);
			}
		}
	}
	
	private class CreateCharacterAction implements ActionListener{
		public void actionPerformed(ActionEvent e){
			showMainMenuButtons(false);
			character =  new CreateCharacter();
			
		}
	}
	
	private class BeginQuestAction implements ActionListener{
		public void actionPerformed(ActionEvent e){
			showMainMenuButtons(false);
			Game game = new Game(frame);
		}
	}
	
	public void showMainMenuButtons(boolean bool){
		
		if(bool){
			createCharacterButton.setVisible(true);
			startButton.setVisible(true);
		}else{
			createCharacterButton.setVisible(false);
			startButton.setVisible(false);
		}
		
	}
	
}
